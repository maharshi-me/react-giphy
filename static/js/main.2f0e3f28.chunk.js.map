{"version":3,"sources":["components/home.js","App.js","index.js"],"names":["GiphyApiKey","myStyle","mainCard","borderRadius","marginTop","padding","noMargin","margin","noPadding","gifPost","textAlign","cursor","formBox","backgroundColor","submitButton","width","search","position","inputInput","paddingLeft","iconButton","marginLeft","marginRight","iconButtonHover","removeGifButton","normalChip","selectChip","postText","SmallIconButton","props","useState","Hovered","setHovered","IconButton","style","onClick","onMouseEnter","onMouseLeave","icon","Home","handleGifQueryChange","e","setState","gifQuery","target","value","gifsLoading","controller","abort","AbortController","searchUrl","fetch","method","signal","then","response","json","data","gifs","forEach","gif","small","original","catch","err","console","error","fetchTrendingGifs","handleClose","open","addPost","posts","text","state","currentText","currentGif","isGifPage","this","trendingUrl","log","gifsList","s","active","color","flashing","size","map","index","src","alt","className","maxWidth","Dialog","onClose","left","top","InputBase","onChange","autoFocus","placeholder","DialogContent","right","id","display","Chip","label","clickable","DialogActions","disabled","post","Component","App","ReactDOM","render","basename","process","document","getElementById"],"mappings":"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","file":"static/js/main.2f0e3f28.chunk.js","sourcesContent":["import React, { Component, useState } from 'react';\r\nimport { Navbar, Row, Col, Card, Button, Textarea, Preloader} from 'react-materialize';\r\nimport Dialog from '@material-ui/core/Dialog';\r\nimport DialogActions from '@material-ui/core/DialogActions';\r\nimport DialogContent from '@material-ui/core/DialogContent';\r\nimport GifIcon from '@material-ui/icons/Gif';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport CloseIcon from '@material-ui/icons/Close';\r\nimport Chip from '@material-ui/core/Chip';\r\nimport ArrowBackIcon from '@material-ui/icons/ArrowBack';\r\nimport InputBase from '@material-ui/core/InputBase';\r\nimport './home.css';\r\n\r\nconst GiphyApiKey = \"EQh0DeRaL6DoipBy8vrLyDzp1hF7f2ej\"\r\n\r\nconst myStyle = {\r\n    mainCard:{\r\n        borderRadius:\"8px\",\r\n        marginTop:\"25px\",\r\n        padding:\"0\",\r\n    },\r\n    noMargin:{\r\n        margin:\"0\"\r\n    },\r\n    noPadding:{\r\n        padding:\"0\"\r\n    },\r\n    gifPost:{\r\n        textAlign:\"center\",\r\n        padding:\"10px 0px 0px 0px\",\r\n        cursor:\"pointer\",\r\n    },\r\n    formBox:{\r\n        padding:\"10px 15px\",\r\n        backgroundColor:\"#F0F2F5\", \r\n        borderRadius:\"50px\", \r\n        cursor:\"pointer\"\r\n    },\r\n    submitButton:{\r\n        width:\"100%\", \r\n        borderRadius:\"8px\", \r\n        backgroundColor:\"#1771E6\"\r\n    },\r\n    search: {\r\n        position: 'relative',\r\n        borderRadius: \"50px\",\r\n        backgroundColor: \"rgba(200,200,200, 0.15)\",\r\n        margin: \"15px 24px 15px 24px\",\r\n        padding:\"5px\",        \r\n    },\r\n    inputInput: {\r\n        padding: \"2px\",\r\n        paddingLeft:\"15px\",\r\n        width: '100%',\r\n    },\r\n    iconButton:{\r\n        backgroundColor:\"rgba(200,200,200, 0.15)\", \r\n        marginLeft:\"24px\", \r\n        marginRight:\"24px\", \r\n        marginTop:\"15px\",\r\n        padding:\"5px\",\r\n    },\r\n    iconButtonHover:{\r\n        backgroundColor: \"rgba(200,200,200, 1)\",\r\n        marginLeft:\"24px\", \r\n        marginRight:\"24px\", \r\n        marginTop:\"15px\",\r\n        padding:\"5px\",\r\n    },\r\n    removeGifButton:{\r\n        backgroundColor:\"rgba(255,255,255, 0.95)\", \r\n        marginLeft:\"24px\",\r\n        marginRight:\"24px\", \r\n        marginTop:\"15px\",\r\n        padding:\"5px\",\r\n    },\r\n    normalChip:{\r\n\r\n    },\r\n    selectChip:{\r\n\r\n    },\r\n    postText:{\r\n        padding:\"5px 24px 5px 24px\"\r\n    }\r\n    \r\n}\r\n\r\nconst SmallIconButton = (props) => {\r\n    const [Hovered, setHovered] = useState(false);\r\n    return(\r\n        <IconButton \r\n            style={Hovered?myStyle.iconButtonHover:myStyle.iconButton} \r\n            onClick={props.onClick}\r\n            onMouseEnter={() => setHovered(true)}\r\n            onMouseLeave={() => setHovered(false)}\r\n        >\r\n            {props.icon}\r\n        </IconButton>\r\n    )\r\n}\r\n\r\nclass Home extends Component {\r\n    constructor(props){\r\n        super(props)\r\n        this.state = {\r\n            open:false,\r\n            isGifPage:false,\r\n            currentText:\"\",\r\n            currentGif:\"\",\r\n            gifQuery:\"\",\r\n            gifsLoading:false,\r\n            gifs:[],\r\n            posts:[\r\n                {\r\n                    \"text\":\"This is default post\",\r\n                    \"gif\":\"\"\r\n                },\r\n            ]\r\n        }\r\n        this.controller = null\r\n    }\r\n    componentDidMount(){\r\n        this.fetchTrendingGifs();\r\n    }\r\n    fetchTrendingGifs(){\r\n        const trendingUrl = `https://api.giphy.com/v1/gifs/trending?api_key=${GiphyApiKey}&limit=12&rating=g`\r\n        this.setState({gifsLoading:true})\r\n        fetch(trendingUrl)\r\n        .then(response => response.json())\r\n        .then(data => \r\n            {\r\n                let gifs = []\r\n                data.data.forEach(gif => {\r\n                    gifs = [...gifs, {small:gif[\"images\"][\"downsized_medium\"][\"url\"],original:gif[\"images\"][\"downsized_medium\"][\"url\"]}]\r\n                });\r\n                this.setState({gifs:gifs, gifsLoading:false})\r\n            })\r\n        .catch(function(err) {\r\n            console.error(` Err: ${err}`);\r\n        });\r\n    }\r\n    handleGifQueryChange = (e) => {\r\n        this.setState({gifQuery:e.target.value, gifsLoading:true})\r\n        // const controller = new AbortController()\r\n        // const signal = controller.signal\r\n        if (this.controller){\r\n            this.controller.abort()\r\n        }\r\n        if (e.target.value === \"\"){\r\n            this.fetchTrendingGifs();\r\n            return\r\n        }\r\n        this.controller = new AbortController()\r\n        const searchUrl = `https://api.giphy.com/v1/gifs/search?api_key=${GiphyApiKey}&limit=12&rating=g&q=${e.target.value}`\r\n        fetch(searchUrl,{method:\"get\", signal:this.controller.signal})\r\n        .then(response => response.json())\r\n        .then(data => \r\n            {\r\n                let gifs = []\r\n                data.data.forEach(gif => {\r\n                    gifs = [...gifs, {small:gif[\"images\"][\"downsized_medium\"][\"url\"],original:gif[\"images\"][\"downsized_medium\"][\"url\"]}]\r\n                });\r\n                this.setState({gifs:gifs, gifsLoading:false})\r\n            })\r\n        .catch(function(err) {\r\n            console.error(` Err: ${err}`);\r\n        });\r\n    }\r\n    handleClose = () => {\r\n        this.setState({open:false})\r\n    }\r\n    addPost = () => {\r\n        this.setState({posts:[{text:this.state.currentText,gif:this.state.currentGif}, ...this.state.posts], currentText:\"\", currentGif:\"\", open:false})\r\n    }\r\n    render() {\r\n        console.log(this.state)\r\n        let gifsList = null\r\n        if(this.state.gifsLoading){\r\n            gifsList = \r\n            <Col s={12} style={{textAlign:\"center\"}}>\r\n                <Preloader\r\n                active\r\n                color=\"blue\"\r\n                flashing={false}\r\n                size=\"small\"\r\n                />\r\n            </Col>\r\n            \r\n        }\r\n        else{\r\n            gifsList = this.state.gifs.map((gif, index) => {\r\n                return(\r\n                    <Col key={index} s={12}>\r\n                        <img style={{cursor:\"pointer\"}} width=\"100%\" src={gif.small} alt={\"Gif\"} onClick={() => this.setState({currentGif:gif.original, isGifPage:false})}></img>\r\n                    </Col>\r\n                )\r\n            })\r\n        }\r\n        \r\n        \r\n        return (\r\n            <>\r\n                <Navbar style={{backgroundColor:\"#1771E6\"}} />\r\n                <div className=\"container\" style={{maxWidth:\"600px\"}}>\r\n\r\n                    \r\n                        <Card style={myStyle.mainCard}>\r\n                            <Row style={myStyle.noMargin}>\r\n                                <Col s={12} style={myStyle.noPadding}>\r\n                                    <div style={myStyle.formBox} onClick={() => this.setState({open:true, isGifPage:false})}>\r\n                                        What's on your mind?\r\n                                    </div>\r\n                                </Col>\r\n                            </Row>\r\n                        </Card>\r\n                        <Dialog\r\n                            open={this.state.open}\r\n                            onClose={this.handleClose}\r\n                        >\r\n                            {this.state.isGifPage\r\n                            ?\r\n                            <>\r\n                                <div style={{position:\"absolute\", left:0, top:0}}>\r\n                                    <SmallIconButton key=\"gif-page\" onClick={() => this.setState({isGifPage:false})} icon={<ArrowBackIcon/>} />\r\n                                </div>\r\n                                <div style={{textAlign:\"center\"}}>\r\n                                    <h5>\r\n                                        Choose a GIF\r\n                                    </h5>\r\n                                    <div style={myStyle.search}>\r\n                                        <InputBase\r\n                                            value={this.state.gifQuery}\r\n                                            onChange={this.handleGifQueryChange}\r\n                                            autoFocus\r\n                                            placeholder=\"Search…\"\r\n                                            style={myStyle.inputInput}\r\n                                        />\r\n                                    </div>\r\n                                </div>\r\n                                \r\n                                <DialogContent>\r\n                                \r\n                                    <Row>\r\n                                        {gifsList}\r\n                                    </Row>\r\n                                </DialogContent>\r\n                            </>\r\n                            :\r\n                            <>\r\n                                <div style={{position:\"absolute\",right:0, top:0}}>\r\n                                    <SmallIconButton key=\"text-page\" onClick={this.handleClose} icon={<CloseIcon />} />\r\n                                </div>\r\n                                <div style={{textAlign:\"center\"}}>\r\n                                    <h5>\r\n                                        Create Post\r\n                                    </h5>\r\n                                </div>\r\n                                \r\n                                <DialogContent>\r\n                                    <Textarea\r\n                                        autoFocus\r\n                                        id=\"post-input\"\r\n                                        placeholder=\"What's on your mind?\"\r\n                                        value={this.state.currentText}\r\n                                        onChange={(e) => {this.setState({currentText:e.target.value})}}\r\n                                    />\r\n                                    \r\n                                    {this.state.currentGif === \"\"?null:\r\n                                    <Row>\r\n                                        <Col s={12} style={{textAlign:\"center\", padding:\"0\"}}>\r\n                                        <div style={{display: \"inline-block\",position: \"relative\", width:\"100%\"}}>\r\n                                            <div style={{position:\"absolute\",right:0, top:0}}>\r\n                                                <IconButton \r\n                                                    style={myStyle.removeGifButton} \r\n                                                    onClick={() => this.setState({currentGif:\"\"})}\r\n                                                >\r\n                                                    <CloseIcon />\r\n                                                </IconButton>\r\n                                            </div>\r\n                                            <img style={{borderRadius:\"8px\"}} width=\"100%\" src={this.state.currentGif} alt={\"Gif\"}></img>\r\n                                        </div>\r\n                                        </Col>\r\n                                    </Row>\r\n                                    }\r\n                                    \r\n                                    <Chip\r\n                                        icon={<GifIcon />}\r\n                                        label={\"GIF\"}\r\n                                        clickable\r\n                                        style={this.state.currentGif === \"\"?myStyle.normalChip:myStyle.selectChip}\r\n                                        onClick={() => {this.setState({isGifPage:true})}}\r\n                                    />\r\n                                </DialogContent>\r\n                                <DialogActions style={{padding:\"8px 24px 24px 24px\"}}>\r\n                                    <Button disabled={((this.state.currentText === \"\") && (this.state.currentGif === \"\") )?true:false} style={myStyle.submitButton} onClick={this.addPost}>\r\n                                        Post\r\n                                    </Button>\r\n                                </DialogActions>\r\n                            </>\r\n                            }\r\n                            \r\n                        </Dialog>\r\n                        {this.state.posts.map((post, index) => {\r\n                            return(\r\n                                <Card className=\"posts\" key={index} style={myStyle.mainCard}>\r\n                                    <Row style={myStyle.noMargin}>\r\n                                        {post.text === \"\"?null:\r\n                                            <Col s={12} style={myStyle.postText}>\r\n                                                {post.text}\r\n                                            </Col>\r\n                                        }\r\n                                        \r\n                                        {post.gif === \"\"? null \r\n                                        :\r\n                                            <Col s={12} style={myStyle.gifPost}>\r\n                                                <img style={{width:\"100%\"}} src={post.gif} alt={\"Gif\"}></img>\r\n                                            </Col>\r\n                                        }\r\n                                        \r\n                                    </Row>\r\n                                </Card>\r\n                            )\r\n                        })}\r\n                </div>\r\n            </>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Home;","import React, { Component } from 'react';\nimport Home from './components/home';\nimport './App.css';\n\nclass App extends Component {\n\trender() {\n\t\treturn (\n\t\t\t<Home />\n\t\t);\n\t}\n}\n\nexport default App;","import { BrowserRouter } from 'react-router-dom'\nimport App from './App';\nimport ReactDOM from \"react-dom\";\nimport './index.css';\n\nReactDOM.render(\n  <BrowserRouter basename={process.env.PUBLIC_URL}>\n      <App />\n  </BrowserRouter>,\n  document.getElementById(\"root\")\n);"],"sourceRoot":""}