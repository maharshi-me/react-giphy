{"version":3,"sources":["components/home.js","App.js","index.js"],"names":["myStyle","mainCard","borderRadius","marginTop","padding","noMargin","margin","noPadding","gifPost","textAlign","cursor","backgroundColor","formBox","submitButton","width","search","position","inputInput","paddingLeft","iconButton","marginLeft","marginRight","normalChip","selectChip","postText","Home","props","handleClose","setState","open","addPost","posts","text","state","currentText","gif","currentGif","isGifPage","gifs","fetch","then","response","json","data","forEach","console","log","this","style","className","maxWidth","s","onClick","Dialog","onClose","left","top","IconButton","InputBase","autoFocus","placeholder","inputProps","DialogContent","map","index","src","right","id","value","onChange","e","target","display","Chip","icon","label","clickable","DialogActions","disabled","post","Component","App","ReactDOM","render","basename","process","document","getElementById"],"mappings":"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","file":"static/js/main.dbced014.chunk.js","sourcesContent":["import React, { Component } from 'react';\r\nimport { Navbar, Row, Col, Card, CardTitle, Icon, Button, Textarea} from 'react-materialize';\r\nimport Dialog from '@material-ui/core/Dialog';\r\nimport DialogActions from '@material-ui/core/DialogActions';\r\nimport DialogContent from '@material-ui/core/DialogContent';\r\nimport DialogContentText from '@material-ui/core/DialogContentText';\r\nimport DialogTitle from '@material-ui/core/DialogTitle';\r\nimport GifIcon from '@material-ui/icons/Gif';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport CloseIcon from '@material-ui/icons/Close';\r\nimport Chip from '@material-ui/core/Chip';\r\nimport FaceIcon from '@material-ui/icons/Face';\r\nimport DoneIcon from '@material-ui/icons/Done';\r\nimport AddIcon from '@material-ui/icons/Add';\r\nimport ArrowBackIcon from '@material-ui/icons/ArrowBack';\r\nimport SearchIcon from '@material-ui/icons/Search';\r\nimport InputBase from '@material-ui/core/InputBase';\r\n\r\nimport './home.css';\r\n\r\nconst myStyle = {\r\n    mainCard:{\r\n        borderRadius:\"8px\",\r\n        marginTop:\"25px\",\r\n        padding:\"0\",\r\n    },\r\n    noMargin:{\r\n        margin:\"0\"\r\n    },\r\n    noPadding:{\r\n        padding:\"0\"\r\n    },\r\n    gifPost:{\r\n        textAlign:\"center\",\r\n        padding:\"10px 0px 0px 0px\",\r\n        cursor:\"pointer\",\r\n        \"hover\":{\r\n            backgroundColor:\"rgba(200,200,200,0.2)\"\r\n        }\r\n    },\r\n    formBox:{\r\n        padding:\"10px 15px\",\r\n        backgroundColor:\"#F0F2F5\", \r\n        borderRadius:\"50px\", \r\n        cursor:\"pointer\"\r\n    },\r\n    submitButton:{\r\n        width:\"100%\", \r\n        borderRadius:\"8px\", \r\n        backgroundColor:\"#1771E6\"\r\n    },\r\n    search: {\r\n        position: 'relative',\r\n        borderRadius: \"50px\",\r\n        backgroundColor: \"rgba(200,200,200, 0.15)\",\r\n        '&:hover': {\r\n          backgroundColor: \"rgba(200,200,200, 0.25)\",\r\n        },\r\n        margin: \"15px 24px 15px 24px\",\r\n        padding:\"5px\",        \r\n    },\r\n    inputInput: {\r\n        padding: \"2px\",\r\n        paddingLeft:\"15px\",\r\n        width: '100%',\r\n    },\r\n    iconButton:{\r\n        backgroundColor:\"rgba(200,200,200, 0.15)\", \r\n        '&:hover': {\r\n            backgroundColor: \"rgba(200,200,200, 0.5)\",\r\n        },\r\n        marginLeft:\"24px\", \r\n        marginRight:\"24px\", \r\n        marginTop:\"15px\",\r\n        padding:\"5px\"\r\n    },\r\n    normalChip:{\r\n\r\n    },\r\n    selectChip:{\r\n\r\n    },\r\n    postText:{\r\n        padding:\"5px 24px 5px 24px\"\r\n    }\r\n    \r\n}\r\n\r\nclass Home extends Component {\r\n    constructor(props){\r\n        super(props)\r\n        this.state = {\r\n            open:false,\r\n            isGifPage:false,\r\n            currentText:\"\",\r\n            currentGif:\"\",\r\n            gifs:[],\r\n            posts:[\r\n                {\r\n                    \"text\":\"This is default post\",\r\n                    \"gif\":\"\"\r\n                },\r\n            ]\r\n        }\r\n    }\r\n    componentDidMount(){\r\n        fetch('https://api.giphy.com/v1/gifs/trending?api_key=EQh0DeRaL6DoipBy8vrLyDzp1hF7f2ej&limit=12&rating=g')\r\n        .then(response => response.json())\r\n        .then(data => \r\n            {\r\n                let gifs = []\r\n                data.data.forEach(gif => {\r\n                    gifs = [...gifs, gif[\"images\"][\"original\"][\"url\"]]\r\n                });\r\n                this.setState({gifs:gifs})\r\n            });\r\n    }\r\n    handleClose = () => {\r\n        this.setState({open:false})\r\n    }\r\n    addPost = () => {\r\n        this.setState({posts:[{text:this.state.currentText,gif:this.state.currentGif}, ...this.state.posts], currentText:\"\", currentGif:\"\", open:false})\r\n    }\r\n    render() {\r\n        console.log(this.state)\r\n        return (\r\n            <>\r\n                <Navbar style={{backgroundColor:\"#1771E6\"}} />\r\n                <div className=\"container\" style={{maxWidth:\"600px\"}}>\r\n\r\n                    \r\n                        <Card style={myStyle.mainCard}>\r\n                            <Row style={myStyle.noMargin}>\r\n                                <Col s={12} style={myStyle.noPadding}>\r\n                                    <div style={myStyle.formBox} onClick={() => this.setState({open:true, isGifPage:false})}>\r\n                                        What's on your mind?\r\n                                    </div>\r\n                                </Col>\r\n                            </Row>\r\n                        </Card>\r\n                        <Dialog\r\n                            open={this.state.open}\r\n                            onClose={this.handleClose}\r\n                        >\r\n                            {this.state.isGifPage\r\n                            ?\r\n                            <>\r\n                                <div style={{position:\"absolute\", left:0, top:0}}>\r\n                                    <IconButton style={myStyle.iconButton} onClick={() => {this.setState({isGifPage:false})}}>\r\n                                        <ArrowBackIcon />\r\n                                    </IconButton>\r\n                                </div>\r\n                                <div style={{textAlign:\"center\"}}>\r\n                                    <h5>\r\n                                        Choose a GIF\r\n                                    </h5>\r\n                                    <div style={myStyle.search}>\r\n                                    \r\n                                        <InputBase\r\n                                            autoFocus\r\n                                            placeholder=\"Search…\"\r\n                                            style={myStyle.inputInput}\r\n                                            inputProps={{ 'aria-label': 'search' }}\r\n                                        />\r\n                                    </div>\r\n                                </div>\r\n                                \r\n                                <DialogContent>\r\n                                \r\n                                    <Row>\r\n                                        {this.state.gifs.map((gif, index) => {\r\n                                            return(\r\n                                                <Col key={index} s={12}>\r\n                                                    <img style={{cursor:\"pointer\"}} width=\"100%\" src={gif} onClick={() => this.setState({currentGif:gif, isGifPage:false})}></img>\r\n                                                </Col>\r\n                                            )\r\n                                        })}\r\n                                        \r\n                                    </Row>\r\n                                </DialogContent>\r\n                            </>\r\n                            :\r\n                            <>\r\n                                <div style={{position:\"absolute\",right:0, top:0}}>\r\n                                <IconButton style={myStyle.iconButton} onClick={this.handleClose}>\r\n                                    <CloseIcon />\r\n                                </IconButton>\r\n                                </div>\r\n                                <div style={{textAlign:\"center\"}}>\r\n                                    <h5>\r\n                                        Create Post\r\n                                    </h5>\r\n                                </div>\r\n                                \r\n                                <DialogContent>\r\n                                    <Textarea\r\n                                        autoFocus\r\n                                        id=\"post-input\"\r\n                                        placeholder=\"What's on your mind?\"\r\n                                        value={this.state.currentText}\r\n                                        onChange={(e) => {this.setState({currentText:e.target.value})}}\r\n                                    />\r\n                                    \r\n                                    {this.state.currentGif == \"\"?null:\r\n                                    <Row>\r\n                                        <Col s={12} style={{textAlign:\"center\", padding:\"0\"}}>\r\n                                        <div style={{display: \"inline-block\",position: \"relative\", width:\"100%\"}}>\r\n                                            <div style={{position:\"absolute\",right:0, top:0}}>\r\n                                                <IconButton style={{backgroundColor:\"#D8DADF\", margin:\"8px\", padding:\"8px\"}} onClick={() => this.setState({currentGif:\"\"})}>\r\n                                                    <CloseIcon />\r\n                                                </IconButton>\r\n                                            </div>\r\n                                            <img style={{borderRadius:\"8px\"}} width=\"100%\" src={this.state.currentGif}></img>\r\n                                        </div>\r\n                                        </Col>\r\n                                    </Row>\r\n                                    }\r\n                                    \r\n                                    <Chip\r\n                                        icon={<GifIcon />}\r\n                                        label={\"GIF\"}\r\n                                        clickable\r\n                                        style={this.state.currentGif == \"\"?myStyle.normalChip:myStyle.selectChip}\r\n                                        onClick={() => {this.setState({isGifPage:true})}}\r\n                                    />\r\n                                </DialogContent>\r\n                                <DialogActions style={{padding:\"8px 24px 24px 24px\"}}>\r\n                                    <Button disabled={((this.state.currentText == \"\") && (this.state.currentGif == \"\") )?true:false} style={myStyle.submitButton} onClick={this.addPost}>\r\n                                        Post\r\n                                    </Button>\r\n                                </DialogActions>\r\n                            </>\r\n                            }\r\n                            \r\n                        </Dialog>\r\n                        {this.state.posts.map((post, index) => {\r\n                            return(\r\n                                <Card className=\"posts\" key={index} style={myStyle.mainCard}>\r\n                                    <Row style={myStyle.noMargin}>\r\n                                        {post.text == \"\"?null:\r\n                                            <Col s={12} style={myStyle.postText}>\r\n                                                {post.text}\r\n                                            </Col>\r\n                                        }\r\n                                        \r\n                                        {post.gif == \"\"? null \r\n                                        :\r\n                                            <Col s={12} style={myStyle.gifPost}>\r\n                                                <img style={{width:\"100%\"}} src={post.gif}></img>\r\n                                            </Col>\r\n                                        }\r\n                                        \r\n                                    </Row>\r\n                                </Card>\r\n                            )\r\n                        })}\r\n                </div>\r\n            </>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Home;","import React, { Component } from 'react';\nimport { BrowserRouter as Router, Switch, Route, Link } from 'react-router-dom';\nimport Home from './components/home';\nimport './App.css';\n\nclass App extends Component {\n\trender() {\n\t\treturn (\n\t\t\t<Home />\n\t\t);\n\t}\n}\n\nexport default App;","import { BrowserRouter } from 'react-router-dom'\nimport App from './App';\nimport ReactDOM from \"react-dom\";\nimport './index.css';\n\nReactDOM.render(\n  <BrowserRouter basename={process.env.PUBLIC_URL}>\n      <App />\n  </BrowserRouter>,\n  document.getElementById(\"root\")\n);"],"sourceRoot":""}