{"version":3,"sources":["components/home.js","App.js","index.js"],"names":["myStyle","mainCard","borderRadius","marginTop","noMargin","margin","noPadding","padding","gifPost","textAlign","formBox","backgroundColor","cursor","submitButton","width","search","position","marginLeft","inputInput","Home","props","handleClose","setState","open","addPost","posts","text","state","currentText","gif","currentGif","isGifPage","gifs","fetch","then","response","json","data","forEach","console","log","this","style","className","s","onClick","Dialog","onClose","left","top","IconButton","DialogContent","InputBase","placeholder","inputProps","map","index","src","right","id","value","onChange","e","target","display","Chip","icon","label","clickable","color","DialogActions","disabled","post","git","maxWidth","Component","App","ReactDOM","render","basename","process","document","getElementById"],"mappings":"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","file":"static/js/main.63759c55.chunk.js","sourcesContent":["import React, { Component } from 'react';\r\nimport { Navbar, Row, Col, Card, CardTitle, Icon, Button, Textarea} from 'react-materialize';\r\nimport Dialog from '@material-ui/core/Dialog';\r\nimport DialogActions from '@material-ui/core/DialogActions';\r\nimport DialogContent from '@material-ui/core/DialogContent';\r\nimport DialogContentText from '@material-ui/core/DialogContentText';\r\nimport DialogTitle from '@material-ui/core/DialogTitle';\r\nimport GifIcon from '@material-ui/icons/Gif';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport CloseIcon from '@material-ui/icons/Close';\r\nimport Chip from '@material-ui/core/Chip';\r\nimport FaceIcon from '@material-ui/icons/Face';\r\nimport DoneIcon from '@material-ui/icons/Done';\r\nimport AddIcon from '@material-ui/icons/Add';\r\nimport ArrowBackIcon from '@material-ui/icons/ArrowBack';\r\nimport SearchIcon from '@material-ui/icons/Search';\r\nimport InputBase from '@material-ui/core/InputBase';\r\n\r\nimport './home.css';\r\n\r\nconst myStyle = {\r\n    mainCard:{\r\n        borderRadius:\"8px\",\r\n        marginTop:\"25px\"\r\n    },\r\n    noMargin:{\r\n        margin:\"0\"\r\n    },\r\n    noPadding:{\r\n        padding:\"0\"\r\n    },\r\n    gifPost:{\r\n        textAlign:\"center\",\r\n        padding:\"10px 0px 0px 0px\"\r\n    },\r\n    formBox:{\r\n        padding:\"10px 15px\",\r\n        backgroundColor:\"#F0F2F5\", \r\n        borderRadius:\"50px\", \r\n        cursor:\"pointer\"\r\n    },\r\n    submitButton:{\r\n        width:\"100%\", \r\n        borderRadius:\"8px\", \r\n        backgroundColor:\"#1771E6\"\r\n    },\r\n    search: {\r\n        position: 'relative',\r\n        borderRadius: \"8px\",\r\n        backgroundColor: \"rgba(200,200,200, 0.15)\",\r\n        '&:hover': {\r\n          backgroundColor: \"rgba(200,200,200, 0.25)\",\r\n        },\r\n        marginLeft: 0,\r\n        padding:\"5px\",\r\n        width: '100%',\r\n        \r\n    },\r\n    inputInput: {\r\n        padding: \"2px 2px 2px 0px\",\r\n        // vertical padding + font size from searchIcon\r\n        width: '100%',\r\n    }\r\n    \r\n}\r\n\r\nclass Home extends Component {\r\n    constructor(props){\r\n        super(props)\r\n        this.state = {\r\n            open:false,\r\n            isGifPage:false,\r\n            currentText:\"\",\r\n            currentGif:\"\",\r\n            gifs:[],\r\n            posts:[\r\n                {\r\n                    \"text\":\"This is default post\",\r\n                    \"gif\":\"\"\r\n                },\r\n            ]\r\n        }\r\n    }\r\n    componentDidMount(){\r\n        fetch('https://api.giphy.com/v1/gifs/trending?api_key=EQh0DeRaL6DoipBy8vrLyDzp1hF7f2ej&limit=12&rating=g')\r\n        .then(response => response.json())\r\n        .then(data => \r\n            {\r\n                let gifs = []\r\n                data.data.forEach(gif => {\r\n                    gifs = [...gifs, gif[\"images\"][\"original\"][\"url\"]]\r\n                });\r\n                this.setState({gifs:gifs})\r\n            });\r\n    }\r\n    handleClose = () => {\r\n        this.setState({open:false})\r\n    }\r\n    addPost = () => {\r\n        this.setState({posts:[{text:this.state.currentText,gif:this.state.currentGif}, ...this.state.posts], currentText:\"\", currentGif:\"\", open:false})\r\n    }\r\n    render() {\r\n        console.log(this.state)\r\n        return (\r\n            <>\r\n                <Navbar style={{backgroundColor:\"white\"}} />\r\n                <div className=\"container\">\r\n                    <div className=\"container\">\r\n                        <Card style={myStyle.mainCard}>\r\n                            <Row style={myStyle.noMargin}>\r\n                                <Col s={12} style={myStyle.noPadding}>\r\n                                    <div style={myStyle.formBox} onClick={() => this.setState({open:true, isGifPage:false})}>\r\n                                        What's on your mind?\r\n                                    </div>\r\n                                </Col>\r\n                            </Row>\r\n                        </Card>\r\n                        <Dialog\r\n                            open={this.state.open}\r\n                            onClose={this.handleClose}\r\n                        >\r\n                            {this.state.isGifPage\r\n                            ?\r\n                            <>\r\n                                <div style={{position:\"absolute\", left:0, top:0}}>\r\n                                    <IconButton style={{backgroundColor:\"#D8DADF\", margin:\"8px\", padding:\"8px\"}} onClick={() => {this.setState({isGifPage:false})}}>\r\n                                        <ArrowBackIcon />\r\n                                    </IconButton>\r\n                                </div>\r\n                                <div style={{textAlign:\"center\"}}>\r\n                                    <h5>\r\n                                        Choose a GIF\r\n                                    </h5>\r\n                                </div>\r\n                                \r\n                                <DialogContent>\r\n                                <div style={myStyle.search}>\r\n                                    \r\n                                    <InputBase\r\n                                        placeholder=\"Searchâ€¦\"\r\n                                        style={myStyle.inputInput}\r\n                                        inputProps={{ 'aria-label': 'search' }}\r\n                                    />\r\n                                </div>\r\n                                <Row>\r\n                                    {this.state.gifs.map((gif, index) => {\r\n                                        return(\r\n                                            <Col key={index} s={6}>\r\n                                                <img width=\"100%\" src={gif} onClick={() => this.setState({currentGif:gif, isGifPage:false})}></img>\r\n                                            </Col>\r\n                                        )\r\n                                    })}\r\n                                    \r\n                                </Row>\r\n                                </DialogContent>\r\n                            </>\r\n                            :\r\n                            <>\r\n                                <div style={{position:\"absolute\",right:0, top:0}}>\r\n                                <IconButton style={{backgroundColor:\"#D8DADF\", margin:\"8px\", padding:\"8px\"}} onClick={this.handleClose}>\r\n                                    <CloseIcon />\r\n                                </IconButton>\r\n                                </div>\r\n                                <div style={{textAlign:\"center\"}}>\r\n                                    <h5>\r\n                                        Create Post\r\n                                    </h5>\r\n                                </div>\r\n                                \r\n                                <DialogContent>\r\n                                    <Textarea\r\n                                        id=\"post-input\"\r\n                                        placeholder=\"What's on your mind?\"\r\n                                        value={this.state.currentText}\r\n                                        onChange={(e) => {this.setState({currentText:e.target.value})}}\r\n                                    />\r\n                                    \r\n                                    {this.state.currentGif == \"\"?null:\r\n                                    <Row>\r\n                                        <Col s={12}>\r\n                                        <div style={{display: \"inline-block\",position: \"relative\"}}>\r\n                                            <div style={{position:\"absolute\",right:0, top:0}}>\r\n                                                <IconButton style={{backgroundColor:\"#D8DADF\", margin:\"8px\", padding:\"8px\"}} onClick={() => this.setState({currentGif:\"\"})}>\r\n                                                    <CloseIcon />\r\n                                                </IconButton>\r\n                                            </div>\r\n                                            <img width=\"100%\" src={this.state.currentGif}></img>\r\n                                        </div>\r\n                                        </Col>\r\n                                    </Row>\r\n                                    }\r\n                                    \r\n                                    <Chip\r\n                                        icon={this.state.currentGif == \"\"?<AddIcon />:null}\r\n                                        label={this.state.currentGif == \"\"?\"Add GIF\":\"Change GIF\"}\r\n                                        clickable\r\n                                        color={this.state.currentGif == \"\"?\"\":\"primary\"}\r\n                                        onClick={() => {this.setState({isGifPage:true})}}\r\n                                    />\r\n                                </DialogContent>\r\n                                <DialogActions>\r\n                                    <Button disabled={((this.state.currentText == \"\") && (this.state.currentGif == \"\") )?true:false} style={myStyle.submitButton} onClick={this.addPost}>\r\n                                        Post\r\n                                    </Button>\r\n                                </DialogActions>\r\n                            </>\r\n                            }\r\n                            \r\n                        </Dialog>\r\n                        {this.state.posts.map((post, index) => {\r\n                            return(\r\n                                <Card key={index} style={myStyle.mainCard}>\r\n                                    <Row style={myStyle.noMargin}>\r\n                                        <Col s={12} style={myStyle.noPadding}>\r\n                                            {post.text}\r\n                                        </Col>\r\n                                        {post.git == \"\"? null \r\n                                        :\r\n                                            <Col s={12} style={myStyle.gifPost}>\r\n                                                <img style={{maxWidth:\"100%\"}} src={post.gif}></img>\r\n                                            </Col>\r\n                                        }\r\n                                        \r\n                                    </Row>\r\n                                </Card>\r\n                            )\r\n                        })}\r\n                    </div>\r\n                </div>\r\n            </>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Home;","import React, { Component } from 'react';\nimport { BrowserRouter as Router, Switch, Route, Link } from 'react-router-dom';\nimport Home from './components/home';\nimport './App.css';\n\nclass App extends Component {\n\trender() {\n\t\treturn (\n\t\t\t<Home />\n\t\t);\n\t}\n}\n\nexport default App;","import { BrowserRouter } from 'react-router-dom'\nimport App from './App';\nimport ReactDOM from \"react-dom\";\nimport './index.css';\n\nReactDOM.render(\n  <BrowserRouter basename={process.env.PUBLIC_URL}>\n      <App />\n  </BrowserRouter>,\n  document.getElementById(\"root\")\n);"],"sourceRoot":""}